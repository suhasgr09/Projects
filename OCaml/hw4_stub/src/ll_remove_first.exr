(* Remove First exercise 1 *)

let l1 = { head <= 0; size <= 0} (* 0 in head signals null *)
in let add_front = proc (x) { proc (l) {
   	      begin
	         l.head <={ data <=x; next <= l.head };
		      l.size <= l.size+1
              end
	      } }
in let remove_first = proc (l) {
  begin
  l.head <= l.head.next;
  l.size <= l.size-1
  end
}

in begin
     ((add_front 2) l1);
     ((add_front 3) l1);
     ((add_front 4) l1);
     (remove_first l1);
     debug(l1)  (* required inspect the list *)
   end

   (*Concept is similar to the ll.ml exercise we implemented in class and last quiz*)