type token =
    UNTUPLE
  | TL
  | TIMES
  | THEN
  | SEMICOLON
  | RPAREN
  | RBRACE
  | RANGLE
  | PROC
  | PLUS
  | OF
  | NODE
  | MINUS
  | LPAREN
  | LET
  | LBRACE
  | LANGLE
  | ISZERO
  | INT of int
  | IN
  | IF
  | ID of string
  | HD
  | EQUALS
  | EOF
  | EMPTYTREE
  | EMPTYLIST
  | EMPTY
  | ELSE
  | DOT
  | DIVIDED
  | CONS
  | COMMA
  | CASET
  | ARROW
  | ABS
val menhir_begin_marker : int
val xv_separated_nonempty_list_SEMICOLON_field_ : (string * Ast.expr) list
val xv_separated_nonempty_list_COMMA_expr_ : Ast.expr list
val xv_separated_nonempty_list_COMMA_ID_ : string list
val xv_separated_list_SEMICOLON_field_ : (string * Ast.expr) list
val xv_separated_list_COMMA_expr_ : Ast.expr list
val xv_separated_list_COMMA_ID_ : string list
val xv_prog : Ast.expr
val xv_loption_separated_nonempty_list_SEMICOLON_field__ :
  (string * Ast.expr) list
val xv_loption_separated_nonempty_list_COMMA_expr__ : Ast.expr list
val xv_loption_separated_nonempty_list_COMMA_ID__ : string list
val xv_ids : string list
val xv_field : string * Ast.expr
val xv_exprs_comma : Ast.expr list
val xv_expr : Ast.expr
val menhir_end_marker : int
